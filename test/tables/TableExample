/**
 * This class is generated by jOOQ
 */
package com.thigh.db.dto.joop.tables;


import com.thigh.db.dto.joop.Joop;
import com.thigh.db.dto.joop.Keys;
import com.thigh.db.dto.joop.enums.TableExampleTypeEnum;
import com.thigh.db.dto.joop.tables.records.TableExampleRecord;

import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TableExample extends TableImpl<TableExampleRecord> {

    private static final long serialVersionUID = 824496237;

    /**
     * The reference instance of <code>joop.table_example</code>
     */
    public static final TableExample TABLE_EXAMPLE = new TableExample();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TableExampleRecord> getRecordType() {
        return TableExampleRecord.class;
    }

    /**
     * The column <code>joop.table_example.first_key</code>.
     */
    public final TableField<TableExampleRecord, Integer> FIRST_KEY = createField("first_key", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>joop.table_example.type_varchar</code>.
     */
    public final TableField<TableExampleRecord, String> TYPE_VARCHAR = createField("type_varchar", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>joop.table_example.type_big_int</code>.
     */
    public final TableField<TableExampleRecord, Long> TYPE_BIG_INT = createField("type_big_int", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>joop.table_example.type_char</code>.
     */
    public final TableField<TableExampleRecord, String> TYPE_CHAR = createField("type_char", org.jooq.impl.SQLDataType.CHAR.length(20), this, "");

    /**
     * The column <code>joop.table_example.type_date</code>.
     */
    public final TableField<TableExampleRecord, Date> TYPE_DATE = createField("type_date", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>joop.table_example.type_datetime</code>.
     */
    public final TableField<TableExampleRecord, Timestamp> TYPE_DATETIME = createField("type_datetime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>joop.table_example.type_decimal</code>.
     */
    public final TableField<TableExampleRecord, BigDecimal> TYPE_DECIMAL = createField("type_decimal", org.jooq.impl.SQLDataType.DECIMAL.precision(5, 5), this, "");

    /**
     * The column <code>joop.table_example.type_double</code>.
     */
    public final TableField<TableExampleRecord, Double> TYPE_DOUBLE = createField("type_double", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>joop.table_example.type_enum</code>.
     */
    public final TableField<TableExampleRecord, TableExampleTypeEnum> TYPE_ENUM = createField("type_enum", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.thigh.db.dto.joop.enums.TableExampleTypeEnum.class), this, "");

    /**
     * The column <code>joop.table_example.type_int</code>.
     */
    public final TableField<TableExampleRecord, Integer> TYPE_INT = createField("type_int", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>joop.table_example.type_text</code>.
     */
    public final TableField<TableExampleRecord, String> TYPE_TEXT = createField("type_text", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>joop.table_example.type_timestamp</code>.
     */
    public final TableField<TableExampleRecord, Timestamp> TYPE_TIMESTAMP = createField("type_timestamp", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>joop.table_example.type_tiny_int</code>.
     */
    public final TableField<TableExampleRecord, Byte> TYPE_TINY_INT = createField("type_tiny_int", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>joop.table_example.type_tiny_int_2</code>.
     */
    public final TableField<TableExampleRecord, Byte> TYPE_TINY_INT_2 = createField("type_tiny_int_2", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>joop.table_example.feat_not_null</code>.
     */
    public final TableField<TableExampleRecord, Integer> FEAT_NOT_NULL = createField("feat_not_null", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>joop.table_example.feat_second_key</code>.
     */
    public final TableField<TableExampleRecord, Integer> FEAT_SECOND_KEY = createField("feat_second_key", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>joop.table_example.feat_default_value</code>.
     */
    public final TableField<TableExampleRecord, Integer> FEAT_DEFAULT_VALUE = createField("feat_default_value", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("500", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>joop.table_example.feat_current_timestamp_on_update</code>.
     */
    public final TableField<TableExampleRecord, Timestamp> FEAT_CURRENT_TIMESTAMP_ON_UPDATE = createField("feat_current_timestamp_on_update", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>joop.table_example.feat_reference_key</code>.
     */
    public final TableField<TableExampleRecord, Integer> FEAT_REFERENCE_KEY = createField("feat_reference_key", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>joop.table_example.feat_unique_index</code>.
     */
    public final TableField<TableExampleRecord, Integer> FEAT_UNIQUE_INDEX = createField("feat_unique_index", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>joop.table_example.feat_joint_index_1</code>.
     */
    public final TableField<TableExampleRecord, Integer> FEAT_JOINT_INDEX_1 = createField("feat_joint_index_1", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>joop.table_example.feat_joint_index_2</code>.
     */
    public final TableField<TableExampleRecord, Integer> FEAT_JOINT_INDEX_2 = createField("feat_joint_index_2", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>joop.table_example</code> table reference
     */
    public TableExample() {
        this("table_example", null);
    }

    /**
     * Create an aliased <code>joop.table_example</code> table reference
     */
    public TableExample(String alias) {
        this(alias, TABLE_EXAMPLE);
    }

    private TableExample(String alias, Table<TableExampleRecord> aliased) {
        this(alias, aliased, null);
    }

    private TableExample(String alias, Table<TableExampleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Joop.JOOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TableExampleRecord> getPrimaryKey() {
        return Keys.KEY_TABLE_EXAMPLE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TableExampleRecord>> getKeys() {
        return Arrays.<UniqueKey<TableExampleRecord>>asList(Keys.KEY_TABLE_EXAMPLE_PRIMARY, Keys.KEY_TABLE_EXAMPLE_IX_UNIQUE_INDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TableExampleRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TableExampleRecord, ?>>asList(Keys.FK_REFERENCE_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TableExample as(String alias) {
        return new TableExample(alias, this);
    }

    /**
     * Rename this table
     */
    public TableExample rename(String name) {
        return new TableExample(name, null);
    }
}
